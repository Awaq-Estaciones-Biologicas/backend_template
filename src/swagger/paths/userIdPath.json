{
  "get": {
    "tags": ["Users"],
    "summary": "Get user by ID (protected)",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "ID of the user to retrieve"
      }
    ],
    "responses": {
      "200": {
        "description": "User retrieved successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "./components/schemas/userSchema.json"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized"
      },
      "404": {
        "description": "User not found"
      }
    }
  },
  "delete": {
    "tags": ["Users"],
    "summary": "Delete user by ID (protected)",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "ID of the user to delete"
      }
    ],
    "responses": {
      "204": {
        "description": "User successfully deleted"
      },
      "401": {
        "description": "Unauthorized"
      },
      "404": {
        "description": "User not found"
      }
    }
  },
  "put": {
    "tags": ["Users"],
    "summary": "Update user by ID (protected)",
    "security": [
      {
        "bearerAuth": []
      }
    ],
    "parameters": [
      {
        "name": "id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "ID of the user to update"
      }
    ],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "$ref": "./components/schemas/userSchema.json"
          },
          "example": {
            "name": "Updated Name",
            "email": "updatedemail@example.com",
            "age": 30
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "User updated successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "./components/schemas/userSchema.json"
            }
          }
        }
      },
      "400": {
        "description": "Invalid input"
      },
      "401": {
        "description": "Unauthorized"
      },
      "404": {
        "description": "User not found"
      }
    }
  }
}
